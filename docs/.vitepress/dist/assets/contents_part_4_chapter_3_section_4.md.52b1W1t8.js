import{_ as t,c as i,o as e,R as l}from"./chunks/framework.kkHJ_Qlh.js";const f=JSON.parse('{"title":"Section 4 정보 아키텍처 제시","description":"","frontmatter":{"next":{"text":"Part 5 사이트 구조","link":"/contents/part/5/site-structure"}},"headers":[],"relativePath":"contents/part/4/chapter/3/section/4.md","filePath":"contents/part/4/chapter/3/section/4.md"}'),a={name:"contents/part/4/chapter/3/section/4.md"},o=l('<h1 id="section-4-정보-아키텍처-제시" tabindex="-1">Section 4 정보 아키텍처 제시 <a class="header-anchor" href="#section-4-정보-아키텍처-제시" aria-label="Permalink to &quot;Section 4 정보 아키텍처 제시&quot;">​</a></h1><p>그룹의 모든 구성원이 작업할 수 있는 공유 마스터 사이트 다이어그램을 기반으로 주요 구조 계획 및 결정을 내리는 경우 팀과 함께 사이트를 계획하는 것이 더 쉽습니다. 사이트 다이어그램이나 사이트 맵은 계획이 발전함에 따라 발전해야 하며 다이어그램에서 변경 사항이 제안되고 만들어지면 핵심 계획 문서 역할을 해야 합니다. 사이트 다이어그램은 사이트의 광범위한 범위와 각 콘텐츠, 탐색 또는 대화형 기능이 표시될 위치에 대한 세부 사항을 계획하는 데 탁월합니다.</p><p>주요 계획 회의의 경우 현장 조직에 대한 큰 다이어그램을 하나 이상 인쇄하여 모든 사람이 회의에서 회의로 진행되는 큰 그림을 볼 수 있도록 하는 것이 좋습니다. 사이트 다이어그램은 회의 테이블을 장악하여 계획을 촉각적이고 유연하게 표현해야 합니다. 모든 사람은 인쇄된 계획에 대해 자유롭게 메모하고 개선 사항을 제안해야 하며, 수정된 다이어그램은 회의의 공식적인 결과가 됩니다.</p><h2 id="_1-사이트-다이어그램" tabindex="-1">1. 사이트 다이어그램 <a class="header-anchor" href="#_1-사이트-다이어그램" aria-label="Permalink to &quot;1. 사이트 다이어그램&quot;">​</a></h2><p>팀이 정보 아키텍처와 콘텐츠의 주요 범주를 작업할 때 사이트 다이어그램은 개발 중인 정보 계층 구조를 시각화하고 팀, 이해 관계자 및 프로젝트 후원자에게 조직 개념을 전달하는 데 도움이 됩니다. 사이트 다이어그램은 브레인스토밍 및 계획 문서에서 실제 사이트가 개발될 때 청사진으로 반복적으로 발전하므로 이러한 커뮤니케이션 역할은 프로젝트 전반에 걸쳐 매우 중요합니다 .</p><p>사이트 다이어그램은 간단한 계층적 &quot;조직도&quot; 다이어그램부터 사용자가 사이트를 경험할 때 사이트의 주요 부분을 보여주고 사이트 디렉터리 및 파일 구조의 개요 역할을 하는 보다 복잡하고 정보가 풍부한 맵까지 다양합니다. 잘 알려진 정보 설계자 Jesse James Garrett은 사실상의 표준이 된 사이트 다이어그램에 대해 널리 사용되는 시각적 어휘를 개발했으며 기호는 사이트 구조와 대화형 관계 및 사용자 결정 지점을 묘사하는 데 광범위하게 유용합니다.</p><p>성숙한 사이트 다이어그램의 주요 요소는 다음과 같습니다.</p><ul><li>콘텐츠 구조 및 구성: 주요 사이트 콘텐츠 구분 및 하위 구분</li><li>논리적 기능 그룹화 또는 구조적 관계</li><li>사이트 각 수준의 &#39;클릭 심도&#39;: 특정 페이지에 도달하려면 몇 번의 클릭이 필요한가요?</li><li>페이지 유형 또는 템플릿(메뉴 페이지, 내부 페이지, 주요 섹션 진입점 등)</li><li>사이트 디렉터리 및 파일 구조</li><li>데이터베이스, RSS 또는 애플리케이션과 같은 동적 데이터 요소</li><li>주요 탐색 용어 및 통제된 어휘</li><li>사이트 내부 및 외부 링크 관계</li><li>사용자 접속 수준, 로그인 필요, 기타 제한 구역</li></ul><p>사이트 다이어그램은 간단하게 시작하여 두 가지 변형으로 발전할 수 있습니다. 즉, 발전하는 사이트 구조를 고객과 이해관계자에게 일반적인 수준에서 전달하는 개념적 사이트 다이어그램과 기술, 편집 및 그래픽 디자인 팀에서 사용하는 보다 복잡한 청사진 다이어그램입니다. 사용자 인터페이스와 디렉토리 및 파일의 구조에 대한 지침으로 사용됩니다.</p><p>그림 4.23은 프리젠테이션 및 일반 개요에 사용하기 위한 간단한 사이트 다이어그램과 사이트 개발 팀에서 사용하기 위해 더 자세히 표시된 동일한 사이트를 보여줍니다. 이러한 사이트 다이어그램은 Adobe Illustrator와 같은 그리기 소프트웨어로 개발할 수 있지만 일반적으로 Microsoft Visio, ConceptDraw 또는 OmniGraffle과 같은 전문 다이어그램 소프트웨어로 개발됩니다.</p><h2 id="_2-와이어프레임" tabindex="-1">2. 와이어프레임 <a class="header-anchor" href="#_2-와이어프레임" aria-label="Permalink to &quot;2. 와이어프레임&quot;">​</a></h2><p>정보 아키텍처 프로세스는 기본적으로 일반을 주장하면서 특정을 피하는 프로세스입니다. 이 개념 단계의 다양한 지점에서 이해관계자, 클라이언트, 심지어 디자인 팀 구성원조차도 페이지의 시각적 디자인에 대한 구체적인 제안을 시작하는 것을 거부할 수 없습니다. 특히 홈 페이지의 모양과 느낌에 대한 우려는 계획 프로세스를 방해하고 누군가가 심각하게 생각하기 훨씬 전에 홈 페이지가 어떤 색상, 그래픽, 사진 또는 일반 특성을 가져야 하는지에 대한 자세한 논의로 이어지는 것으로 악명이 높습니다. 사이트의 전략적 목표, 기능 및 구조를 고려했습니다. 시각적으로 단순한 페이지 와이어프레임 다이어그램을 사용하면 팀은 순전히 시각적인 디자인으로 인해 주의가 산만해지는 일 없이 정보 아키텍처와 탐색 어휘에 계속 집중할 수 있습니다.</p><p>사이트 다이어그램이 개발 중인 웹 사이트의 전체적인 개요를 제공한다면 와이어프레임은 결국 그래픽 및 인터페이스 디자이너가 사이트의 예비 및 최종 페이지 디자인을 만드는 데 사용하게 될 &quot;대략적인 지도&quot;입니다. 와이어프레임은 사이트의 주요 탐색 및 콘텐츠 요소가 페이지에 나타날 위치에 대한 대략적인 2차원 가이드입니다. 신중하게 디자인하면 사이트의 다양한 페이지 형태에 일관된 모듈식 구조를 가져오고 완성된 템플릿에 대한 기본 레이아웃과 탐색 구조를 제공합니다.</p><p>웹 페이지 와이어프레임의 표준 요소로 나타날 수 있는 사항은 다음과 같습니다.</p><ul><li>조직 로고</li><li>사이트 아이덴티티 또는 제목</li><li>페이지 제목 헤드라인</li><li>탐색경로 탐색</li><li>검색 양식</li><li>귀하가 속한 대규모 조직에 대한 링크</li><li>사이트에 대한 글로벌 탐색 링크</li><li>로컬 콘텐츠 탐색</li><li>기본 페이지 콘텐츠</li><li>우편 주소 및 이메일 정보</li><li>저작권 진술</li><li>연락처 정보</li></ul><p>정보 아키텍처와 탐색에 초점을 맞춰 토론을 진행하려면 와이어프레임 다이어그램을 단순하고 꾸미지 않은 상태로 유지하세요. 눈에 띄는 타이포그래피를 피하고, 단일 일반 글꼴을 사용하고, 기능 영역을 구분해야 하는 경우 회색 톤을 사용하되 색상이나 그림은 피하세요. 일반적으로 성숙한 와이어프레임에 나타나는 유일한 그래픽은 조직 로고이지만, 거기에서도 단순히 로고의 일반적인 위치를 나타내는 것이 더 나을 수 있습니다. 전역 및 로컬 탐색에 대한 생각이 성숙해지고 기본 사이트 콘텐츠의 성격과 구성에 대한 확신이 커짐에 따라 페이지 와이어프레임은 더욱 복잡해집니다.</p><p>콘텐츠 관리 시스템인 Drupal과 WordPress의 페이지 표시 기능은 필요한 HTML, CSS 및 PHP 방법을 알고 있는 전면 개발자가 광범위하게 사용자 정의할 수 있는 일반 사이트 테마와 페이지 템플릿으로 구성되어 있습니다. Drupal의 Zen 2 HTML5 기반 반응형 &quot;모바일 우선&quot; 레이아웃 테마는 처음에 사이트를 와이어프레임하는 데 사용할 수 있고 이후 사이트의 추가 시각적 개발을 위한 유연한 기반으로 사용할 수 있는 특히 유연한 테마입니다. 사이트에 어떤 CMS를 사용하는지에 관계없이 계획 및 아키텍처 단계에서 사이트 템플릿의 단순하고 시각적으로 희박한 &quot;와이어프레임&quot; 버전을 고려하여 자세한 시각적 디자인을 연기하는 동시에 사이트 탐색의 대화형 특성에 집중할 수 있습니다. 프로세스 후반까지. Drupal과 WordPress 모두 사이트 테마를 빠르게 변경할 수 있으며, 다양한 종류의 디스플레이 테마에서 예비 사이트 아키텍처를 검사하고 사용하면 탐색 또는 조직적 문제를 지적하는 데 도움이 될 수 있으며 원하는 기능에 대한 좋은 아이디어를 얻을 수 있습니다. 완성된 사이트 테마에 포함합니다.</p>',17),r=[o];function n(s,p,c,_,u,d){return e(),i("div",null,r)}const m=t(a,[["render",n]]);export{f as __pageData,m as default};
