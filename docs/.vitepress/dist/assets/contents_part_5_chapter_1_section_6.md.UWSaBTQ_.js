import{_ as t,o as e,c as o,R as a}from"./chunks/framework.JgfdjA-K.js";const u=JSON.parse('{"title":"Section 6 견고한 구조 구축","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/5/chapter/1/section/6.md","filePath":"contents/part/5/chapter/1/section/6.md"}'),r={name:"contents/part/5/chapter/1/section/6.md"},i=a('<h1 id="section-6-견고한-구조-구축" tabindex="-1">Section 6 견고한 구조 구축 <a class="header-anchor" href="#section-6-견고한-구조-구축" aria-label="Permalink to &quot;Section 6 견고한 구조 구축&quot;">​</a></h1><p>잘 디자인된 사이트에는 수십 또는 수백 페이지에 걸쳐 반복적으로 사용되는 모듈식 요소가 포함되어 있습니다. 이러한 요소에는 페이지 헤더에 대한 전역 탐색 헤더 링크와 그래픽, 기업의 연락처 정보 및 우편 주소가 포함될 수 있습니다. 각 파일에 표준 페이지 구성 요소를 구성하는 텍스트와 HTML 코드를 포함하는 것은 의미가 없습니다. 대신 수백 페이지에 걸쳐 반복되는 표준화된 요소가 포함된 단일 파일을 사용하세요. 해당 파일을 변경하면 해당 구성 요소가 포함된 사이트의 모든 페이지가 자동으로 업데이트됩니다. HTML, CSS 및 최신 웹 서버는 재사용 가능한 모듈식 구성 요소의 강력함과 유연성을 제공하며 대부분의 대규모 정교한 사이트는 수십 개의 재사용 가능한 구성 요소를 사용하여 구축됩니다.</p><h2 id="_1-브라우저-변형" tabindex="-1">1. 브라우저 변형 <a class="header-anchor" href="#_1-브라우저-변형" aria-label="Permalink to &quot;1. 브라우저 변형&quot;">​</a></h2><p>웹 브라우저는 HTML 및 CSS에 대한 웹 표준을 따르는 데 있어 훨씬 더 일관적이 되었습니다. 그러나 타이포그래피, 양식, 위치 지정 및 정렬은 웹 브라우저의 브랜드 또는 운영 체제 버전마다 약간씩 다르게 작동하는 경우가 있으며, 다양한 모바일 웹 브라우저의 확산이 추가되었습니다. 복잡성. 브라우저 간의 미묘한 차이는 종종 눈에 띄지 않거나 사이트의 기능이나 미학에 거의 차이를 주지 않지만, 정확하거나 복잡한 웹 페이지 레이아웃에서는 브라우저 차이가 불쾌한 결과를 초래할 수 있습니다. 웹 페이지가 표시되고 각 주요 데스크톱 및 모바일 웹 브라우저와 두 주요 운영 체제(Microsoft Windows, Apple Macintosh, Apple의 모바일 iOS 및 Google의 Android 모바일 OS).</p><p>웹 로그를 확인하거나 Google Analytics와 같은 서비스를 사용하여 특정 독자층에서 가장 일반적인 브라우저 브랜드, 브라우저 버전 및 운영 체제(Mac, Windows, 모바일)가 무엇인지 확인하십시오. 페이지가 여러 브라우저에서 렌더링되는 방식에 차이가 있는 경우 W3C(HTML의 경우 <a href="http://validator.w3.org/" target="_blank" rel="noreferrer">validator.w3.org</a>, CSS의 경우 <a href="http://jigsaw.w3.org/CSS-validator" target="_blank" rel="noreferrer">jigsaw.w3.org/CSS-validator</a>). 모든 브라우저가 CSS3(이 글을 쓰는 시점의 최신 버전)의 모든 기능을 지원하는 것은 아닙니다. 특히 해당 기능이 거의 사용되지 않거나 최근에 CSS3 코드의 공식 표준에 추가된 경우 더욱 그렇습니다. 예를 들어 그림자가 적용된 텍스트는 유효한 CSS3 옵션이지만 모든 브라우저가 이를 지원하는 것은 아닙니다.</p><h2 id="_2-파일-이름" tabindex="-1">2. 파일 이름 <a class="header-anchor" href="#_2-파일-이름" aria-label="Permalink to &quot;2. 파일 이름&quot;">​</a></h2><p>웹 페이지는 브라우저에 전달되어 화면에 표시되는 일관된 페이지로 구성되는 파일 집합입니다. 웹 사이트를 구성하는 수많은 페이지와 지원 파일을 추적하려면 파일 및 디렉터리 이름에 주의하는 것이 중요합니다.</p><p>일반 언어 이름을 사용하면 구성 요소 이름을 지정할 때 기술 또는 숫자 횡설수설을 사용하지 마십시오. 개인용 컴퓨팅 초기에는 ms-dos 및 이전 버전의 Microsoft Windows와 같은 서투른 시스템에서 사용자가 파일 및 디렉터리 이름에 대해 암호화된 코드(예: &quot;whtevr34.htm”). 파일 이름에는 단어 공백과 영숫자가 아닌 문자가 허용되지 않았으므로 기술자는 암호화된 파일 이름에 가독성을 추가하기 위해 밑줄과 같은 문자를 자주 사용했습니다(예: &quot;cats_003.htm&quot;).</p><p>수십 년에 걸쳐 형성된 습관은 깨기 어려울 수 있으며, 다른 팀 웹사이트의 파일 구조를 조사하는 것은 때때로 제2차 세계 대전의 독일 에니그마 코드를 해독하는 것처럼 느껴질 수 있습니다. Windows, Macintosh 및 Linux 시스템의 현재 파일 이름 규칙은 훨씬 더 유연하며 언젠가 사이트 구성 방법을 알아내야 할 팀 구성원, 사이트 사용자 및 동료에게 비밀스러운 이름을 부과할 이유가 없습니다.</p><p>WordPress 또는 Drupal과 같은 대부분의 CMS 프로그램에서는 두 가지 장점이 있는 &quot;친숙한&quot; URL 명명 규칙을 사용할 수 있습니다. 즉, 사람들이 이해하기 쉽고 Bing 및 Google과 같은 검색 엔진의 관련성 순위에 기여합니다.</p><p>이러한 &quot;친숙한&quot; WordPress URL의 페이지 콘텐츠를 파악하는 것은 매우 쉽습니다.</p><ul><li><a href="http://patricklynch.net/recipes/beef/beef-tomato-chili-in-a-slow-cooker/" target="_blank" rel="noreferrer">patricklynch.net/recipes/beef/beef-tomato-chili-in-a-slow-cooker/</a></li><li><a href="http://coastfieldguides.com/books/a-field-guide-to-north-atlantic-wildlife/" target="_blank" rel="noreferrer">coastfieldguides.com/books/a-field-guide-to-north-atlantic-wildlife/</a></li></ul><p>프로그래밍에는 평범한 영어 레이블을 사용하고 코드에 설명 주석을 추가할 때 아마도 가장 큰 호의를 베푸는 사람은 지금으로부터 3년 후에는 바로 자신이 될 것이라는 오래된 속담이 있습니다. 3년 후, “x83_0002”라는 사이트 디렉토리에 무엇이 있는지 아시나요?</p><p>모든 파일과 디렉터리에 일반 언어 이름을 사용하고 단어를 &quot;줄바꿈&quot; 하이픈 문자로 구분하세요. 이 시스템은 읽고 이해하기 쉽고 기존의 단어 공백이 허용되지 않기 때문에 하이픈은 파일 이름을 검색 엔진에서 분석할 수 있는 개별 단어 또는 숫자 문자열로 &quot;분리&quot;하고 검색 순위 및 내용 관련성에 기여합니다. 귀하의 페이지. 디렉터리 이름에도 이 규칙을 권장합니다. 그리고 항상 웹 서버에 설정한 디렉터리 및 파일 구조에 사이트 콘텐츠 구성의 가시적 구조를 반영하도록 노력하세요.</p>',14),n=[i];function s(c,l,p,d,h,_){return e(),o("div",null,n)}const S=t(r,[["render",s]]);export{u as __pageData,S as default};
