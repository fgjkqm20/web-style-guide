import{_ as t,c as e,o as a,R as o}from"./chunks/framework.kkHJ_Qlh.js";const h=JSON.parse('{"title":"Section 5 테마 및 템플릿 만들기","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/5/chapter/2/section/5.md","filePath":"contents/part/5/chapter/2/section/5.md"}'),r={name:"contents/part/5/chapter/2/section/5.md"},s=o('<h1 id="section-5-테마-및-템플릿-만들기" tabindex="-1">Section 5 테마 및 템플릿 만들기 <a class="header-anchor" href="#section-5-테마-및-템플릿-만들기" aria-label="Permalink to &quot;Section 5 테마 및 템플릿 만들기&quot;">​</a></h1><p>테마는 전체 페이지 레이아웃, 활자체, 색 구성표, 그래픽, 페이지와 페이지 헤더의 기타 시각적 세부 정보, 영역과 같은 콘텐츠 구성 요소의 위치 지정 등 CMS 기반 웹 사이트 대부분의 시각적 측면을 제어합니다. , 블록 및 뷰. 대부분의 WordPress 또는 Drupal 테마에는 여러 가지 &quot;페이지 유형&quot; 또는 &quot;페이지 템플릿&quot;이 포함되어 있습니다. 용어는 CMS마다 다르지만 기본 개념은 동일합니다. 홈페이지, 기본 콘텐츠 웹 페이지, 블로그 스타일 게시 페이지, 이미지 갤러리와 같은 페이지 유형은 테마 내의 일반적인 페이지 종류입니다.</p><p>테마 영역은 페이지를 머리글, 바닥글, 열과 같은 친숙한 레이아웃 규칙으로 나눕니다(그림 5.10a 참조). 더 복잡한 테마는 페이지 영역의 더 많은 하위 구분을 제공할 수 있습니다(그림 5.10b 및 c 참조). 단일 페이지에서 복잡한 테마의 모든 영역 및 하위 영역을 거의 사용하지 않지만, 이 잠재적 영역 네트워크는 콘텐츠, 블록 및 보기를 페이지에 배치할 수 있는 위치에 대해 엄청난 유연성을 제공합니다. HTML 또는 CSS 코드를 작성합니다.</p><p>사이트의 기본 페이지 유형 중 다수는 선택한 테마에 따라 반자동으로 생성됩니다. 콘텐츠를 입력하면서 원하는 기본 프레젠테이션 종류(기존 웹 페이지, 블로그 게시물 등)를 결정하면 템플릿이 선택한 테마 내에서 콘텐츠를 배치합니다. 원하는 경우 나중에 콘텐츠 형식을 쉽게 변경할 수 있으며, 더 적합한 다른 테마를 찾으면 나중에 사이트의 전체 테마를 변경할 수도 있습니다.</p><p>Drupal과 같은 보다 정교한 CMS 프로그램을 사용하면 기본 페이지 유형보다 훨씬 더 많은 기능을 사용할 수 있습니다. 컨텐츠 영역, 블록 및 보기를 사용하여 다양한 페이지 레이아웃을 개발할 수 있습니다. 이러한 유연성을 위해서는 CMS 프로그램을 잘 알아야 하지만 WordPress나 Drupal과 같은 시스템에서는 고급 HTML/CSS 또는 프로그래밍 기술 없이도 뛰어난 페이지 레이아웃 유연성을 얻을 수 있습니다.</p><h2 id="_1-맞춤-테마" tabindex="-1">1. 맞춤 테마 <a class="header-anchor" href="#_1-맞춤-테마" aria-label="Permalink to &quot;1. 맞춤 테마&quot;">​</a></h2><p>대부분의 WordPress 또는 Drupal 테마에서는 내장 테마 CSS를 대체하는 CSS 코드를 추가하여 테마의 다양한 시각적 또는 인쇄적 측면을 사용자 정의할 수 있습니다. 예를 들어 상대적으로 간단한 CSS 코드 추가를 통해 테마의 배경 그래픽을 변경하거나, 테마의 특정 요소 색상을 수정하거나, 테마에 있는 모든 헤더의 타이포그래피를 변경할 수도 있습니다.</p><p>사이트 레이아웃 테마에 대한 더 야심찬 요구 사항이 있거나 엄격한 요구 사항이 있는 경우 완전히 처음부터 사용자 정의 테마를 만들 필요 없이 유연한 사용자 정의를 위해 특별히 만들어진 여러 가지 플라스틱 및 수정 가능한 Drupal 테마가 있습니다. 예를 들어, Drupal의 &quot;Zen&quot; 테마는 HTML 및 CSS에 익숙한 고급 Drupal 사용자를 위해 풍부한 시각적 및 레이아웃 도구 키트를 제공하도록 설계된 고도로 사용자 정의 가능한 테마 프레임워크입니다.</p><p>사용자 정의 CMS 테마 개발을 시작하기 전에(또는 테마 개발자를 고용하여 테마를 만들 가능성이 더 높음) Drupal, WordPress, Joomla 및 상업용 CMS 테마에 대한 보조 시장을 철저히 조사해야 합니다. 말 그대로 상대적으로 적당한 비용으로 구입할 수 있는 정교한 테마가 수백 개 있으며, 무료로 시작한 다음 사용자 정의할 수 있는 오픈 소스 테마도 수십 개가 더 있습니다. 테마를 조사할 때 색상, 그래픽, 타이포그래피의 피상적인 측면에 너무 주의가 산만해지지 마십시오. 이것들은 확실히 중요하지만 특히 전문적으로 개발된 상업용 테마에서는 테마의 영역 레이아웃, 메뉴 구축을 위해 사전 구축된 옵션, 페이지 유형 및 사용자 정의 CSS, 블록, 그리고 조회수. 테마는 특정 콘텐츠 분류, 그래픽 및 멀티미디어 요구 사항, 사이트에 계획된 전자 상거래 기능에 맞게 적용할 수 있어야 합니다. 전문적으로 개발된 테마와 함께 제공되는 지원 문서를 주의 깊게 검토하고, 가능하다면 테마가 기존 사이트에 어떻게 성공적으로 적용되었는지에 대한 예를 개발자에게 문의하세요.</p>',9),n=[s];function p(c,_,i,S,l,d){return a(),e("div",null,n)}const C=t(r,[["render",p]]);export{h as __pageData,C as default};
