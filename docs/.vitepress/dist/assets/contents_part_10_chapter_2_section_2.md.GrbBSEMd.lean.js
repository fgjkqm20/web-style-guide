import{_ as e,c as o,o as a,k as t,a as n}from"./chunks/framework.kkHJ_Qlh.js";const x=JSON.parse('{"title":"Section 2 구조적 마크업","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/10/chapter/2/section/2.md","filePath":"contents/part/10/chapter/2/section/2.md"}'),s={name:"contents/part/10/chapter/2/section/2.md"},c=t("h1",{id:"section-2-구조적-마크업",tabindex:"-1"},[n("Section 2 구조적 마크업 "),t("a",{class:"header-anchor",href:"#section-2-구조적-마크업","aria-label":'Permalink to "Section 2 구조적 마크업"'},"​")],-1),r=t("p",null,"HTML은 문서에 구조적 의미 계층을 추가하는 마크업 언어입니다. 태그 정의 시 제목, 표제, 단락, 목록, 표, 주소, 인용 등의 요소를 래핑하여 작동합니다. 그 결과 소프트웨어로 읽고 해석할 수 있는 기계 친화적인 문서가 탄생했습니다. 예를 들어 태그는 A 지점에서 B 지점까지의 텍스트가 제목이고 다음 텍스트 블록이 단락이라는 것을 소프트웨어에 알려줍니다. 예를 들어, 웹 작성자가 텍스트 블록을 페이지 제목으로 정의하면 웹 브라우저 소프트웨어는 페이지 제목을 브라우저 제목 표시줄, 브라우저 기록 및 북마크에 표시할 수 있습니다.",-1),i=t("p",null,"표면적으로 구조화된 문서는 제목과 같은 요소를 구별하기 위해 글꼴 크기 및 기타 시각적 서식을 사용하는 문서와 다르지 않습니다. 그러나 기능적으로 구조는 웹에 힘과 유용성을 부여합니다. 예를 들어 이 섹션의 제목을 살펴보겠습니다. <b>구조적 마크업</b>은 굵은 글씨이고 일반 텍스트 바로 위에 위치하므로 제목으로 시각적으로 식별할 수 있습니다. 그러나 <b>는 단지 굵은 글씨만을 의미하기 때문에 소프트웨어는 이것이 이 섹션의 기본 소제목임을 추론할 수 없습니다. 장 제목이 <h1>구조적 마크업</h1>으로 표시되면 소프트웨어는 해당 페이지가 구조적 마크업에 관한 것임을 알고 구조적 마크업 검색 시 페이지를 반환하거나 구조적 마크업에 대한 편집 페이지입니다.",-1),_=t("p",null,'텍스트를 마크업할 때 각 텍스트 요소가 무엇인지 생각하고 모양이 어떻게 되어야 하는지 생각하지 마세요. 적절한 HTML 구조 태그로 각 요소에 태그를 지정한 다음 CSS를 사용하여 시각적 속성을 관리합니다(5장의 "의미적 마크업" 참조).',-1),d=[c,r,i,_];function p(l,h,m,f,u,S){return a(),o("div",null,d)}const k=e(s,[["render",p]]);export{x as __pageData,k as default};
