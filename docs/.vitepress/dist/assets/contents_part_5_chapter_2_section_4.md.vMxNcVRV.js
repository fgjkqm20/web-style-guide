import{_ as t,c as a,o as e,R as o}from"./chunks/framework.kkHJ_Qlh.js";const q=JSON.parse('{"title":"Section 4 콘텐츠 및 기능 정리","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/5/chapter/2/section/4.md","filePath":"contents/part/5/chapter/2/section/4.md"}'),r={name:"contents/part/5/chapter/2/section/4.md"},n=o('<h1 id="section-4-콘텐츠-및-기능-정리" tabindex="-1">Section 4 콘텐츠 및 기능 정리 <a class="header-anchor" href="#section-4-콘텐츠-및-기능-정리" aria-label="Permalink to &quot;Section 4 콘텐츠 및 기능 정리&quot;">​</a></h1><p>모든 웹 콘텐츠 관리 시스템은 고유한 내부 구조로 되어 있으며, 복잡한 상업용 CMS 제품 중 상당수도 엄격한 서버 하드웨어 및 운영 체제 요구 사항을 가지고 있습니다. 그러나 모든 CMS 소프트웨어는 기본 서버 운영 체제부터 구성, 사용자가 웹 페이지에서 실제로 보는 그래픽 및 프레젠테이션 레이어까지 다양한 기능 레이어로 구성되어 있습니다. 여기에서는 콘텐츠 구성 및 구조화, 편집 작업 흐름 및 액세스 권한 구성, 콘텐츠의 시각적 표시를 위한 다양한 내장 도구가 포함된 적당히 복잡하고 유능한 CMS의 예로 오픈 소스 제품인 Drupal을 사용했습니다. 그리고 대화형 기능. CMS 구조와 조직 세부 사항의 정확한 세부 사항은 시스템마다 다르지만, 나중에 대기업 요구에 맞게 더 복잡한 상용 제품으로 전환할 것으로 예상되는 경우에도 Drupal은 CMS 개념에 대한 훌륭한(그리고 무료) 소개를 제공합니다.</p><h2 id="_1-블록" tabindex="-1">1. 블록 <a class="header-anchor" href="#_1-블록" aria-label="Permalink to &quot;1. 블록&quot;">​</a></h2><p>블록은 페이지 레이아웃 영역 내의 콘텐츠 또는 대화형 기능 영역입니다. 블록을 페이지에 미리 정의된 기능을 추가하기 위해 페이지 레이아웃 템플릿에 배치할 수 있는 미리 설계된 모듈식 단위 또는 &quot;빌딩 블록&quot;으로 생각하십시오. 예를 들어, 사용자 로그인 영역은 사용자 설문 조사, 검색 입력 양식 또는 특정 종류의 탐색 링크 레이아웃과 마찬가지로 블록일 수 있습니다. Drupal 블록에는 CMS의 기본 기능을 확장하는 추가 기능 모듈의 시각적 인터페이스가 있는 경우가 많습니다. 블록은 다양한 방식으로 표시되도록 구성할 수 있으며 CMS 관리자는 페이지 영역(머리글, 왼쪽 사이드바, 바닥글) 내에서 블록이 표시되어야 하는 위치를 결정할 수 있습니다.</p><h2 id="_2-견해" tabindex="-1">2. 견해 <a class="header-anchor" href="#_2-견해" aria-label="Permalink to &quot;2. 견해&quot;">​</a></h2><p>보기를 사용하면 특정 종류의 텍스트와 시각적 콘텐츠를 다양한 방법으로 정렬할 수 있습니다. 예를 들어, Drupal 비즈니스 사이트에서 흔히 볼 수 있는 &quot;뷰&quot; 중 하나는 부서 내 사람들의 디렉터리입니다. 디렉터리는 CMS 데이터베이스에서 특정 콘텐츠를 가져와 각 사람의 간략한 프로필을 구성합니다. 여기에는 사진 링크, 사람의 이름과 직함, 연락처 정보, 이메일 주소 등이 포함될 수 있습니다. 부서 내의 모든 사람에 대해 이 기본 설정을 반복하는 &quot;보기&quot;를 설정하여 페이지에 부서 디렉터리를 생성합니다. 특정 사람의 이름을 클릭하면 관련 프로필 보기가 나타날 수 있으며, 이는 동일한 인물 사진의 더 큰 버전, 해당 사람의 기본 연락처 정보, 그리고 아마도 그의 역할 및 현재 프로젝트에 대한 추가 정보를 표시하는 보기로 연결됩니다.</p><p>두 가지 보기(디렉터리, 프로필) 각각은 동일한 데이터베이스 소스에서 정보를 가져오지만 정보를 다른 방식으로 표시합니다. 즉, 디렉터리에 대한 간략한 목록, 직원 프로필에 대한 훨씬 더 큰 레이아웃입니다. 이러한 방식으로 뷰를 사용하면 컨텐츠를 유연하게 재사용할 수 있습니다. 예를 들어, 회사 서비스 보기 목록에는 해당 서비스에 관해 연락할 사람들의 사진이 포함될 수 있습니다. 서비스 보기의 연락처 사진과 정보는 회사 디렉토리 및 직원 프로필과 동일한 데이터베이스 목록에서 가져옵니다. 동일한 정보 소스를 사용하는 매우 다른 세 가지 페이지 보기입니다.</p><h2 id="_3-분류" tabindex="-1">3. 분류 <a class="header-anchor" href="#_3-분류" aria-label="Permalink to &quot;3. 분류&quot;">​</a></h2><p>CMS 분류 시스템을 사용하면 콘텐츠에 라벨을 지정하는 데 사용되는 정보(콘텐츠가 포함될 수 있는 일반 및 특정 카테고리, 키워드 및 콘텐츠에 대한 기타 설명 등의 메타정보)를 정확하게 구조화하고 제어할 수 있습니다. 영어는 엄청나며 종종 여러 사람이 동일한 단어를 사용하지 않고도 내용을 정확하게 설명할 수 있을 만큼 풍부합니다. 공유되고 통제된 용어 어휘 없이는 복잡한 콘텐츠를 정리하는 것이 불가능합니다. &quot;심장마비&quot;와 &quot;심근경색&quot;은 모두 동일한 의학적 사건을 설명하지만 심장마비를 표시하는 방법에 대한 일반적인 합의가 없으면 중복된 정보가 있는 여러 범주로 끝나게 됩니다. 데이터베이스에 있더라도 본질적으로 사이트 사용자에게 손실됩니다.</p><p>분류법을 사용하면 콘텐츠에 레이블을 지정하고 분류하는 방법에 대한 통제된 어휘 목록을 생성할 수 있으며, 통제된 어휘 용어 이상의 세부 정보를 제공하는 추가 키워드를 추가할 수도 있습니다. 분류 시스템을 사용하여 생성한 카테고리 및 하위 카테고리는 사이트 탐색의 기초가 되는 경우가 많습니다.</p><p>성공적인 분류법은 유연하여 현재 사이트 콘텐츠를 설명하고 향후 콘텐츠를 예상합니다. 사이트에 새 콘텐츠를 추가할 때 분류 체계를 다시 방문하여 필요한 모든 카테고리와 태그가 포함되어 있는지 확인하세요.</p>',11),c=[n];function i(s,p,_,h,l,u){return e(),a("div",null,c)}const S=t(r,[["render",i]]);export{q as __pageData,S as default};
