import{_ as t,c as e,o as i,R as a}from"./chunks/framework.kkHJ_Qlh.js";const o="/web-style-guide/assets/8.PE7saCdF.png",s="/web-style-guide/assets/9.TqyGKsPE.png",m=JSON.parse('{"title":"Section 1 시각적 평면 형성","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/8/chapter/4/section/1.md","filePath":"contents/part/8/chapter/4/section/1.md"}'),r={name:"contents/part/8/chapter/4/section/1.md"},n=a('<h1 id="section-1-시각적-평면-형성" tabindex="-1">Section 1 시각적 평면 형성 <a class="header-anchor" href="#section-1-시각적-평면-형성" aria-label="Permalink to &quot;Section 1 시각적 평면 형성&quot;">​</a></h1><p>가장 기본적으로 그래픽 디자인은 시각적 요소를 평면에 구성하는 것입니다. 즉, 그래픽, 다양한 미디어 및 타이포그래피를 조작하여 콘텐츠의 메시지를 반영하고 향상시키는 시각적 순서를 생성하는 것입니다. 손목시계부터 회의실 벽 전체에 이르기까지 크기가 점점 커지고 있는 오늘날의 화면 세계에서 시각적 평면의 가장자리는 알 수 없는 동시에 피할 수 없는 것처럼 보일 수 있습니다. 우리의 디자인은 수천 개의 장치 가장자리로 둘러싸여 있으며 레이아웃이 이러한 다양한 평면에 어떻게 반응할지 대략적으로만 알 수 있습니다.</p><p>오늘날 디지털 장치의 시각적 평면은 다음과 같습니다.</p><ul><li>가변성: 우리는 우리가 디자인하는 분야의 크기나 물리적 특성조차 더 이상 알지 못합니다. 우리는 작업의 경계에 대한 통제력을 상실했으며 더 이상 작업을 안내하고 참조 프레임 역할을 할 기본 가장자리가 없습니다.</li><li>동적: 우리의 화면 디자인은 즉석에서 제작되므로 어떤 브라우저, 운영 체제, 글꼴, 색상 또는 기타 기본 디스플레이 기술이 디자인을 지원하게 될지 완전히 확신할 수 없습니다.</li><li>유비쿼터스: 좋은 소식은 우리 디자인이 더 많은 청중을 확보한 적이 없으며 정보 디스플레이가 이제 책상에서 벗어나 진정한 환경 친화적이 되었다는 것입니다. 디자이너가 작업할 수 있는 이보다 더 강력하고 유연하며 유용한 시각적 평면은 없었습니다.</li><li>반응형: 이 멀티스크린 세계에서 유일하게 합리적인 방법은 반응형 웹 디자인의 기초, 즉 유동적인 페이지 그리드, 반응형 이미지, 그리고 디자인이 존재하는 다양한 화면에 지능적인 방식으로 반응할 수 있게 해주는 CSS3 미디어 쿼리에 달려 있습니다.</li></ul><p>한때 디자이너가 시야의 확고한 크기를 알고 알려진 경계와 한계에 맞춰 구축했다면 오늘날의 웹 디자이너는 예측할 수 없는 높이와 너비의 화면이 있고 화면의 상단과 중앙에 구축할 부분이 있다는 것만 알고 있습니다. 에서 구축합니다. 좋은 소식은 타이포그래피, 색상, 대비, 크기 관계, 심지어 복잡한 레이아웃까지 시각적 디자인의 모든 기본 도구가 여전히 작동한다는 것입니다. 완전한 반응형 디자인에서는 잘 작동합니다.</p><p>또한 디자인 프로세스는 그래픽 디자인의 가변성을 지원하도록 발전해야 합니다.</p><ul><li>기존 디자인: 고정된 가장자리와 비율, 고정된 그리드로 평면을 정의하고 콘텐츠로 채웁니다.</li><li>전환: 유연한 그리드를 정의하고 채웁니다.</li><li>새로운 기능: 가장 기본적이고 중요한 콘텐츠부터 시작하여 계속 구축하는 &#39;모바일 우선&#39; 콘텐츠부터 디자인합니다.</li></ul><h2 id="_1-줄-길이" tabindex="-1">1. 줄 길이 <a class="header-anchor" href="#_1-줄-길이" aria-label="Permalink to &quot;1. 줄 길이&quot;">​</a></h2><p>텍스트 레이아웃의 이상적인 줄 길이는 인간 눈의 생리학을 기반으로 합니다. 높은 시력을 요구하는 작업에 사용되는 망막 부위를 황반이라고 합니다. 황반은 작으며 일반적으로 망막 면적의 15% 미만입니다. 정상적인 독서 거리에서 황반으로 덮힌 시야의 원호 폭은 불과 몇 인치에 불과합니다. 이는 잘 디자인된 텍스트 열의 너비, 즉 한 줄에 약 12단어 정도입니다. 연구에 따르면 줄 길이가 이상적인 너비를 초과하기 시작하면 읽는 속도가 느려지는 것으로 나타났습니다. 그 이유는 독자가 한 줄의 끝에서 다음 줄의 시작 부분까지 추적하기 위해 눈이나 목의 근육을 사용해야 하기 때문입니다. 눈이 한 페이지에서 먼 거리를 이동해야 한다면 독자는 다음 줄의 시작 부분을 찾아야 합니다.</p><figure><img id="figure8" alt="" src="'+o+'"><figcaption> 그림 8 </figcaption></figure><p>웹의 사용자 정의 특성과 기술의 변화를 고려하면 모든 상황에서 줄 길이를 제어하는 ​​것은 불가능합니다. 표준 텍스트 줄당 66자를 편안하게 표시하도록 설계된 줄은 사용자가 기본 브라우저 텍스트 크기를 확대하면 좁은 20자 줄이 됩니다. 열 너비가 고정된 다중 열 레이아웃은 텍스트가 확대되면 쉽게 읽기 어려워질 수 있습니다.</p><p>반응형 디자인과 범용 사용성 원칙(3장 참조)은 페이지 디자인의 너비를 유동적으로 조정할 수 있도록 하여 줄 길이 문제에 대한 훌륭한 솔루션을 제공하므로 사용자는 제대로 작동하지 않을 수 있는 단일 보기에 갇히지 않습니다. 그들을. 또한 현재의 모든 브라우저에서는 사용자가 웹 레이아웃의 전체 문자 크기를 변경할 수 있으므로 사용자가 편안하게 읽을 수 있도록 레이아웃을 조정할 수 있는 추가적인 유연성을 제공합니다. 대형 화면을 위한 반응형 레이아웃에서 디자이너는 페이지에 대해 CSS &quot;최대 너비&quot;를 설정하여 레이아웃이 대형 디스플레이 화면에서 터무니없고 읽기 어려운 너비로 확장되는 것을 방지할 수 있습니다.</p><h2 id="_2-색상-및-대비" tabindex="-1">2. 색상 및 대비 <a class="header-anchor" href="#_2-색상-및-대비" aria-label="Permalink to &quot;2. 색상 및 대비&quot;">​</a></h2><p>색상과 대비는 보편적인 유용성의 핵심 구성 요소입니다. 텍스트 가독성은 배경 필드에서 문자 형식을 구별하는 독자의 능력에 따라 달라집니다. 색상 구별은 주로 밝기와 채도에 따라 달라집니다. 흰색 배경에 검정색 텍스트는 검정색에는 밝기가 없고 흰색에만 밝기가 있으므로 대비 수준이 가장 높습니다. 색조(Hue) 또한 파란색, 노란색과 같은 보색과 함께 가장 큰 대비를 만들어내는 요소입니다. 색상 선택으로 인해 사용자가 텍스트와 배경을 구별하기 어렵게 만들지 않도록 하세요. 또한 남성 독자의 거의 8%가 빨간색과 녹색 음영을 구별하는 데 어려움을 겪고 있다는 사실을 잊지 마십시오.</p><figure><img id="figure9" alt="" src="'+s+'"><figcaption> 그림 9 </figcaption></figure>',15),c=[n];function l(p,_,d,u,h,f){return i(),e("div",null,c)}const S=t(r,[["render",l]]);export{m as __pageData,S as default};
