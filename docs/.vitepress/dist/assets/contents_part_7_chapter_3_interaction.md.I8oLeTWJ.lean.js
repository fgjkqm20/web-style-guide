import{_ as e,c as a,o as n,k as t,a as r}from"./chunks/framework.kkHJ_Qlh.js";const S=JSON.parse('{"title":"Chapter 3 상호 작용","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/7/chapter/3/interaction.md","filePath":"contents/part/7/chapter/3/interaction.md"}'),o={name:"contents/part/7/chapter/3/interaction.md"},c=t("h1",{id:"chapter-3-상호-작용",tabindex:"-1"},[r("Chapter 3 상호 작용 "),t("a",{class:"header-anchor",href:"#chapter-3-상호-작용","aria-label":'Permalink to "Chapter 3 상호 작용"'},"​")],-1),s=t("p",null,"가장 기본적인 웹 상호 작용을 통해 사용자는 링크를 클릭하고 양식을 제출하여 페이지와 상호 작용합니다. 이 상호 작용은 클라이언트(일반적으로 웹 브라우저)와 서버 간의 대화를 시작합니다. 브라우저는 데이터와 페이지 요청을 서버에 보내고 서버는 데이터를 수집하고 페이지를 반환합니다. 서버가 페이지를 전달하면 브라우저가 다른 요청을 할 때까지 모든 대화가 일시 중지됩니다. 다른 링크를 클릭하거나 다른 양식을 제출하지 않는 한 사용자가 페이지에서 수행하는 작업은 중요하지 않습니다. 이 클라이언트-서버 모델은 컴퓨터 인터페이스로 작업할 때 기대하는 상호 작용 유형에 적합하지 않습니다. 예를 들어 필수 필드를 선택하세요. 기본 웹 환경에서는 사용자가 양식을 제출하면 서버가 데이터를 확인하고, 필드가 누락된 경우 양식을 사용자에게 반환하여 완료합니다. 사용자가 제출하기 전에 필수 필드를 모두 찾지 않으면 이 교환이 반복적으로 발생할 수 있습니다.",-1),i=t("p",null,'더 효과적인 접근 방식은 사용자가 완료 후 오류를 수정하도록 하는 대신 오류를 방지하는 데 도움이 되는 피드백을 제공하는 클라이언트 측 상호 작용입니다. 동적 양식을 사용하면 필드가 완료되면 유효성이 검사되며 모든 필드가 완료된 경우에만 "제출" 버튼이 활성화됩니다. 웹에서는 HTML, JavaScript, CSS, DOM(문서 객체 모델) 등의 기술 조합을 통해 클라이언트 측 상호 작용이 가능합니다. 요소는 페이지가 브라우저에 로드된 후 페이지 콘텐츠, 구조 및 스타일을 동적으로 업데이트하는 방법인 동적 HTML(DHTML)을 구성합니다.',-1),p=t("p",null,"비동기식 JavaScript 및 XML을 의미하는 Ajax는 동적 인터페이스 요소와 동적 페이지 콘텐츠를 모두 제공하는 기술이며 웹 애플리케이션 구축에 자주 사용됩니다. Ajax를 사용하면 페이지는 사용자 작업(예: 지도 확대)에 대한 응답으로 작은 데이터 비트에 대한 요청을 보내고, 전체 페이지를 다시 로드할 필요 없이 데이터가 페이지의 특정 영역에 표시됩니다. Ajax는 개별 사용자 작업에 전체 페이지를 다시 로드할 필요가 없기 때문에 성능상의 이점이 있습니다. Ajax는 또한 동적이고 반응성이 뛰어난 사용자 인터페이스를 허용하여 훨씬 더 많은 상호작용 방식을 제공합니다.",-1),_=t("p",null,"대부분의 최신 웹 사이트와 애플리케이션은 Dojo, JQuery, AngularJS와 같은 라이브러리와 프레임워크를 사용하여 구축됩니다. 이러한 프레임워크는 풍부한 애플리케이션과 상호 작용을 구축하기 위한 Ajax 및 기타 유틸리티를 제공합니다. 개발팀과 사용자에게 도움이 되도록 대화형 기능을 제공하기 위해 개발팀이 사용할 수 있는 기본 위젯과 구성 요소를 제공합니다. 많은 사이트에서 동일한 라이브러리를 사용하면 사용자가 구성 요소의 작동 방식을 잘 알고 있으므로 사용성이 향상됩니다. 제품 팀은 구성 요소가 새로운 장치 및 기술과 호환되도록 유지하는 라이브러리에 대한 정기적인 업데이트를 통해 이점을 얻습니다.",-1),h=[c,s,i,p,_];function l(d,u,m,x,f,j){return n(),a("div",null,h)}const J=e(o,[["render",l]]);export{S as __pageData,J as default};
