import{_ as t,c as e,o as i,R as a}from"./chunks/framework.kkHJ_Qlh.js";const h=JSON.parse('{"title":"Section 4 WAI-ARIA는 최후의 수단으로","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/7/chapter/3/section/4.md","filePath":"contents/part/7/chapter/3/section/4.md"}'),o={name:"contents/part/7/chapter/3/section/4.md"},c=a('<h1 id="section-4-wai-aria는-최후의-수단으로" tabindex="-1">Section 4 WAI-ARIA는 최후의 수단으로 <a class="header-anchor" href="#section-4-wai-aria는-최후의-수단으로" aria-label="Permalink to &quot;Section 4 WAI-ARIA는 최후의 수단으로&quot;">​</a></h1><p>WAI-ARIA(Accessible Rich Internet Application Suite)는 HTML을 기반으로 구축된 W3C 사양으로, 사용자가 Ajax를 사용하여 개발된 동적 웹 인터페이스 요소에 액세스하고 조작할 수 있도록 화면 판독기 소프트웨어와 같은 보조 기술에서 사용할 수 있는 추가 마크업을 제공합니다. , JavaScript, HTML 및 기타 기술을 제공합니다. 개발 팀의 경우 ARIA는 장애가 있는 사용자가 복잡한 상호 작용에 액세스할 수 있도록 하는 수단으로서 기본 HTML 요소로 가능한 것과 상호 작용 디자인에 바람직한 것 사이의 인식된 격차를 해소하는 것처럼 보일 수 있습니다. 그러나 WAI-ARIA 지지자조차도 기본 HTML 요소에 대한 옵션을 먼저 소진하도록 권장합니다. W3C 문서 Using WAI-ARIA in HTML에서 &quot;ARIA 사용의 첫 번째 규칙&quot;은 다음과 같습니다.</p><blockquote><p>요소의 용도를 변경하고 ARIA 역할, 상태 또는 속성을 추가하여 액세스 가능하게 만드는 대신 이미 내장된 의미와 동작을 갖춘 기본 HTML 요소 또는 속성을 사용할 수 있다면 그렇게 하세요.</p></blockquote><p>이는 부분적으로 사용자 지정 컨트롤을 만들고 유지 관리하는 데 따른 오버헤드 때문입니다. 다음 목록에는 기본 HTML 요소와 함께 즉시 사용할 수 있는 속성인 사용자 정의 컨트롤을 사용하여 유효성을 검사하고 유지 관리해야 하는 모든 측면이 자세히 설명되어 있습니다. 이러한 속성이 없는 컨트롤은 일부 사용자가 사용할 수 없습니다.</p><ul><li>Focusable: 키보드를 사용하여 컨트롤에 접근할 수 있나요?</li><li>조작 가능 : 키보드를 이용하여 컨트롤을 조작할 수 있나요?</li><li>예상 작동: 표준 키를 사용하여 컨트롤을 작동할 수 있습니까?</li><li>명확한 초점 표시: 컨트롤에 초점이 맞춰졌을 때 쉽게 확인할 수 있습니까?</li><li>레이블: 컨트롤에 컨트롤과 연결된 텍스트 레이블이 있습니까?</li><li>역할: 컨트롤에 컨트롤과 관련된 올바른 역할이 있습니까?</li><li>상태 및 속성: 해당하는 모든 상태 및 속성이 컨트롤과 연결되어 있습니까?</li><li>색상 대비: 시력이 낮거나 색상 인식에 문제가 있는 사람들이 컨트롤과 해당 라벨을 사용할 수 있습니까?</li><li>고대비 모드: 고대비 모드를 활성화하면 컨트롤을 사용할 수 있나요?</li></ul>',5),n=[c];function l(s,r,A,_,p,I){return i(),e("div",null,n)}const u=t(o,[["render",l]]);export{h as __pageData,u as default};
