import{_ as t,c as e,o,R as a}from"./chunks/framework.kkHJ_Qlh.js";const q=JSON.parse('{"title":"Section 4 정보 분할","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/4/chapter/2/section/4.md","filePath":"contents/part/4/chapter/2/section/4.md"}'),c={name:"contents/part/4/chapter/2/section/4.md"},i=a('<h1 id="section-4-정보-분할" tabindex="-1">Section 4 정보 분할 <a class="header-anchor" href="#section-4-정보-분할" aria-label="Permalink to &quot;Section 4 정보 분할&quot;">​</a></h1><p>웹에 있는 대부분의 정보는 비순차적으로 읽을 수 있는 짧은 참조 문서로 수집됩니다. 이는 내용이 대부분 기술 문서나 관리 문서인 사이트의 경우 특히 그렇습니다. 웹이 발명되기 오래전에 기술 저술가들은 독자들이 제목, 부제, 글머리 기호 목록을 신속하게 검색할 수 있는 페이지에 있는 짧은 정보 덩어리를 좋아한다는 사실을 발견했습니다. 정보를 표시하는 이 방법은 여러 가지 이유로 웹에 잘 적용됩니다.</p><ul><li>정보를 찾는 웹 독자 중 구조화되지 않은 긴 화면 텍스트 구절을 읽는 사람은 거의 없습니다. 다양한 제목과 부제, 목록, 표와 같은 시각적 스캐닝 보조 도구는 독자가 관련 정보를 빠르게 찾을 수 있도록 도와줍니다.</li><li>개별 정보 덩어리가 웹 링크에 적합합니다. 웹 링크 사용자는 일반적으로 링크가 책의 일반 내용이 아닌 관련 정보의 특정 단위를 제공할 것으로 기대합니다.</li><li>청킹은 사이트 전체에서 일관된 모듈식 레이아웃으로 정보를 구성하고 표시하는 데 도움이 됩니다. 이를 통해 사용자는 사이트에 대한 과거 경험을 향후 검색 및 탐색에 적용할 수 있을 뿐만 아니라 웹 사이트의 익숙하지 않은 섹션이 어떻게 구성될지 예측할 수 있습니다.</li><li>간결한 정보 덩어리는 긴 문서를 제한적으로 볼 수 있는 컴퓨터 화면에 더 적합합니다. 태블릿이나 스마트폰과 같은 모바일 장치의 제한된 뷰포트로 인해 콘텐츠를 간결하게 유지하고 주요 주제와 키워드를 강조할 수 있도록 신중하게 디자인하는 것이 더욱 중요합니다.</li></ul><h2 id="_1-콘텐츠-청크" tabindex="-1">1. 콘텐츠 청크 <a class="header-anchor" href="#_1-콘텐츠-청크" aria-label="Permalink to &quot;1. 콘텐츠 청크&quot;">​</a></h2><p>웹과 같은 연결된 하이퍼텍스트 시스템에서 콘텐츠는 특정 주제에 대한 정보의 모듈식, 일관되게 구성된 &quot;청크&quot;(일부 저자에서는 &quot;수사적 클러스터&quot;라고도 함)로 구성되는 경우가 많습니다. 특정 주제에 대한 웹 링크를 클릭하면 해당 링크가 Wikipedia 홈페이지가 아닌 특정 콘텐츠로 이동하기를 기대합니다. 예를 들어, &quot;치킨 솔팀보카&quot;에 대한 웹 링크를 클릭하면 이탈리아 요리에 관한 전체 책의 첫 페이지가 아니라 요리법이나 요리에 대한 간단한 기사로 연결될 것으로 기대할 것입니다. 인쇄본에서는 그러한 특정 연결이나 각주가 인쇄의 기본 단위인 번호가 매겨진 페이지를 사용하여 수행됩니다. 웹에서 &quot;페이지&quot;의 길이는 임의적일 수 있지만, saltimbocca의 웹 링크를 통해 (어딘가에) &quot;chicken saltimbocca&quot;라는 용어가 포함된 5,000 단어 웹 페이지가 표시된다면 오해를 받을 것입니다. . 링크를 통해 치킨 살팀보카에 대한 구체적인 정보를 얻을 수 없는 이유는 무엇입니까? 너무 크거나 관련성이 없어 어수선하지 않은 특정 정보 블록에 대한 이러한 사용자 기대를 충족하려면 콘텐츠를 웹 사용자의 기대를 충족할 수 있도록 구조화되고 구성된 모듈식 단위로 이상적으로 &quot;청크&quot;해야 합니다.</p><p>정보 덩어리의 개념은 유연하고 상식에 부합해야 하며, 주제의 맥락에 따라 논리적으로 구성되고, 사용하기 편리해야 합니다. 콘텐츠의 성격에 따라 콘텐츠를 어떻게 세분화하고 구성해야 하는지 제안해 보세요. 짧고 세심하게 구성된 웹 페이지가 일반적으로 긴 페이지보다 낫지만 긴 문서를 임의로 여러 개의 짧은 페이지로 나누는 것은 때로는 별 의미가 없습니다. 특히 사용자가 한 단계에서 문서를 쉽게 인쇄하거나 저장할 수 있도록 하려는 경우에는 더욱 그렇습니다.</p><p>콘텐츠 관리 시스템(CMS)은 일련의 콘텐츠 &quot;청크&quot;를 허용하도록 구성될 수도 있습니다. 예를 들어, 긴 기사나 블로그 게시물에는 주요 기사 필드와 기사의 짧거나 추상적인 버전을 위한 별도의 필드, 키워드 및 일러스트레이션 링크가 있는 경우가 많습니다. Drupal과 같은 CMS 소프트웨어를 사용하면 콘텐츠에 CMS 콘텐츠의 일반적인 제목(짧은 버전), 전체 기사(전체 기사), 키워드 기본 구성보다 더 많은 구조가 필요한 경우 사용자 정의 기사 구조와 키워드 제어 어휘를 생성할 수 있습니다. 동일한 핵심 데이터베이스에서 웹사이트, 모바일 앱, 소셜 미디어 플랫폼 전반에 걸쳐 유연하게 배포할 수 있는 모듈식 형식으로 일관되게 구성되면 콘텐츠가 훨씬 더 강력하고 적응력이 높아집니다.</p>',7),n=[i];function r(s,l,_,p,u,d){return o(),e("div",null,n)}const m=t(c,[["render",r]]);export{q as __pageData,m as default};
