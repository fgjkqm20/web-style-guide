import{_ as t,c as o,o as e,R as a}from"./chunks/framework.kkHJ_Qlh.js";const P=JSON.parse('{"title":"Section 1 올바른 파일 형식 선택","description":"","frontmatter":{},"headers":[],"relativePath":"contents/part/11/chapter/3/section/1.md","filePath":"contents/part/11/chapter/3/section/1.md"}'),r={name:"contents/part/11/chapter/3/section/1.md"},n=a('<h1 id="section-1-올바른-파일-형식-선택" tabindex="-1">Section 1 올바른 파일 형식 선택 <a class="header-anchor" href="#section-1-올바른-파일-형식-선택" aria-label="Permalink to &quot;Section 1 올바른 파일 형식 선택&quot;">​</a></h1><p>다양한 그래픽 형식의 장점과 단점을 잘 이해하면 전체 웹 페이지 다운로드 크기에 대한 &quot;무게&quot;를 많이 줄일 수 있을 뿐만 아니라 잘 제작된 그래픽이 제대로 보이지 않을 때 마음의 고통을 많이 줄일 수 있습니다. 또는 페이지 성능 예산에 비해 너무 큰 것으로 판명되었습니다. &quot;항상 JPEG를 사용하십시오.&quot;라는 마법의 공식은 없습니다. 이를 위해서는 항상 PNG를 사용하세요.” 어떤 형식이 잘 작동할지 최선을 다해 계산한 다음, 그래픽을 다양한 형식으로 내보내고 파일 크기를 확인하여 가정을 테스트하세요. 더 큰 이미지 크기(예: 150 × 150 픽셀보다 큼)에서는 파일 형식 선택이 매우 간단하지만 작은 그래픽은 사용자를 속일 수 있습니다. 작고 딱딱한 아이콘 그래픽은 GIF로 잘 작동해야 하지만 때로는 JPEG나 PNG가 실제로 더 좋아 보이고 그다지 크지 않을 때도 있습니다.</p><h2 id="_1-인터페이스-요소" tabindex="-1">1. 인터페이스 요소 <a class="header-anchor" href="#_1-인터페이스-요소" aria-label="Permalink to &quot;1. 인터페이스 요소&quot;">​</a></h2><p>작은 페이지 탐색 그래픽, 버튼, 로고 및 아이콘과 같은 그래픽 디자인 요소는 인터레이스되지 않은 GIF 또는 PNG 그래픽으로 처리되는 경우가 많습니다. Photoshop에서 페이지 구성 요소를 검토할 때 그래픽보다는 CSS3 그래픽 효과를 사용하여 배경색 필드, 프레임, 규칙 및 버튼과 같은 요소를 처리할 수 있는 기회를 항상 찾아야 합니다. 최고, 최저 비용의 그래픽은 그래픽이 전혀 없는 경우가 많습니다.</p><p>아이콘 글꼴, CSS 스프라이트(CSS 코드에서 참조되는 그래픽) 및 CSS 그래픽 효과의 조합은 매우 낮은 다운로드 비용으로 많은 시각적 유연성을 제공할 수 있습니다. 특히 현재 아이콘만 포함하는 사용자 정의 아이콘 글꼴을 만드는 데 투자하는 경우 더욱 그렇습니다. 사용할 가능성이 높습니다. Font Awesome(원래 Twitter Bootstrap용으로 개발됨)과 같은 무료 아이콘 글꼴은 훌륭한 리소스이지만 사이트에서 아이콘 중 10~15개만 사용하는 경우 수백 개의 아이콘을 다운로드하는 것은 거의 의미가 없습니다. IcoMoon(icomoon.io)과 같은 아이콘 글꼴 유틸리티를 사용하면 사용자 정의 아이콘 글꼴을 만들 수 있고 SVG 아이콘 및 기호를 글꼴 문자로 변환할 수도 있습니다.</p><p>확장 가능한 벡터 그래픽(SVG)은 점진적 채우기 또는 투명도와 같은 복잡한 효과가 많이 없는 단순한 그래픽 모양, 아이콘 및 작은 아이콘 일러스트레이션에도 유용할 수 있습니다. 이름에서 알 수 있듯이 SVG 그래픽은 곡선, 점, 선 및 기타 모양에 대한 수학적 설명을 기반으로 하며 품질 저하 없이 어떤 크기로든 확장할 수 있습니다. 이는 72~96ppi의 &quot;기존&quot; 또는 &quot;1x&quot; 디스플레이 화면이 인치당 200픽셀 이상의 &quot;Retina&quot; 또는 &quot;2x&quot; 디스플레이로 대체되는 컴퓨터 디스플레이의 전환기에 강력한 이점입니다(아래 참조). 레티나 디스플레이에 대한 자세한 내용은) SVG 그래픽은 화면 해상도와 관계없이 크기가 조정될 수 있으므로 SVG 그래픽은 두 종류의 디스플레이 모두에서 잘 보입니다.</p><p>SVG 그래픽에 대한 정교한 브라우저 지원은 점점 더 좋아지고 있지만 일러스트레이션과 같은 보다 복잡한 벡터 그래픽을 위한 형식으로서 SVG에는 단점이 있습니다. 웹 페이지에 벡터 SVG 그래픽을 표시하려면 브라우저는 SVG를 픽셀로 렌더링해야 합니다. 이 프로세스는 시간이 걸리고 Adobe Illustrator와 같은 벡터 드로잉 프로그램에서 생성된 매우 복잡한 일러스트레이션, 데이터 그래픽 및 지도의 경우 예측할 수 없습니다(그림 11.11). 복잡한 벡터 그래픽에 대한 브라우저 지원이 더욱 정확하고 안정적이 될 때까지 Adobe Illustrator와 같은 도구에서 일러스트레이션을 만드는 것이 가장 좋지만, 최종 결과는 음영 및 투명도의 미묘함을 안정적으로 캡처할 수 있는 PNG 또는 JPEG 그래픽으로 렌더링하는 것이 좋습니다.</p><p>복잡한 벡터 그래픽을 SVG 형식으로 변환하는 데 문제가 있을 수 있지만 다음과 같은 이유로 벡터 그래픽은 탁월한 투자입니다.</p><ul><li>브라우저의 SVG 지원은 계속해서 개선될 것입니다.</li><li>벡터 아트웍은 비트맵 JPEG 또는 PNG의 다양한 해상도로 확장될 수 있으며 각 크기에서 뛰어난 품질을 제공합니다. 이는 화면 해상도를 기반으로 페이지 그래픽을 제공하는 구성표에 유용합니다. 여기서 1x 및 2x 버전의 그림을 모두 만들어 각 종류의 디스플레이 화면에 맞게 최적화합니다.</li><li>벡터 그래픽을 인쇄에도 사용할 수 있습니다.</li></ul><h2 id="_2-사진과-일러스트레이션" tabindex="-1">2. 사진과 일러스트레이션 <a class="header-anchor" href="#_2-사진과-일러스트레이션" aria-label="Permalink to &quot;2. 사진과 일러스트레이션&quot;">​</a></h2><p>JPEG는 복잡한 컬러 일러스트레이션과 사진에 가장 널리 사용되는 파일 형식입니다. 일반적으로 JPEG 그래픽은 압축에 효율적이며 최신 디스플레이 화면 및 인쇄 용도에서 뛰어난 결과를 생성합니다. 새로운 레티나 또는 2x 디스플레이 화면에서 적절한 크기의 JPEG 사진이나 일러스트레이션은 그래픽과 사진의 최고의 인쇄 표현에 쉽게 맞먹습니다.</p><p>웹 작업에 JPEG를 많이 사용하는 경우 원본 이미지가 전체 해상도로 거의 사용되지 않더라도 카메라 원본 사진(JPEG 또는 Camera Raw) 또는 원본 Photoshop 아트워크를 전체 해상도로 보존하기 위해 항상 주의해야 합니다. 웹 페이지에서. JPEG는 JPEG 형식으로 저장할 때 이미지 품질을 저하시키는 &quot;손실&quot; 이미지 압축 시스템을 사용합니다. 일반적으로 이미지 압축과 이미지 품질의 균형은 일반 웹 독자에게는 명확하지 않지만 JPEG 이미지의 크기를 조정하거나 편집해야 하는 경우 손실 압축은 중요한 의미를 갖습니다. 따라서 JPEG 형식으로 작업할 때는 JPEG 사진을 다시 압축할 때 발생하는 품질 손실을 방지하기 위해 원본 파일의 복사본에서만 작업하는 것이 좋습니다.</p>',12),i=[n];function c(s,p,l,G,_,u){return e(),o("div",null,i)}const S=t(r,[["render",c]]);export{P as __pageData,S as default};
